process.container = 'maxibor/megahit-nf:0.1-dev'

params {
    reads = ''
    phred = 33
    results = './results'
    paired_end = true
    minlen = 500
    help = false
    minread = 150
    mindamage = 0.2
    multiqc_config = "$baseDir/assets/multiqc_config.yml"
}




profiles {
    standard {
        executor {
            name = 'local'
        }
         process{
            withLabel : 'bigmem' {
                cpus = 32
                memory = '256G'
            }
            withLabel : 'intenso' {
                cpus = 8
                memory = '40G'
            }
            withLabel : 'expresso' {
                cpus = 4
                memory = '16G'
            }
            withLabel : 'ristretto' {
                cpus = 1
                memory = '8G'
            }
        }
    }
    test {
        executor {
            name = 'local'
        }
        params {
            reads = "$baseDir/test/data/*.{1,2}.fastq.gz"
            phred = 64
            results = './test_results'
            paired_end = true
            help = false
        }  
         process{
            cpus = 2
            memory = '4G'
        }
    }
    shh {
        executor {
            name = 'slurm'
            queueSize = 16
        }
        process{
            withLabel : 'bigmem' {
                queue = 'medium'
                cpus = 30
                memory = '100G'
                time = '12h'
            }
            withLabel : 'longo' {
                queue = 'medium'
                cpus = 20
                memory = '15G'
                time = '12h'
            }
            withLabel : 'intenso' {
                queue = 'short'
                cpus = 6
                memory = '12G'
                time = '1h'
            }
            withLabel : 'expresso' {
                queue = 'short'
                cpus = 4
                memory = '2G'
                time = '10m'
            }
            withLabel : 'ristretto' {
                queue = 'short'
                cpus = 1
                memory = '2G'
                time = '15m'
            }
        }
    }

    conda {
        // process.conda = "$baseDir/environment.yaml" 
        process.conda = "/projects1/users/borry/15_miniconda3/envs/env-megahit-nf"
    }
    docker {
        docker.enabled = true
        // Avoid this error:
        //   WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
        // Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351
        // once this is established and works well, nextflow might implement this behavior as new default.
        // docker.runOptions = '-u \$(id -u):\$(id -g)'
    }
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.runOptions = '-B /run/shm:/run/shm'
        singularity.cacheDir = "/projects1/singularity_scratch/cache/"
    }
}

timeline {
  enabled = true
  file = "${params.results}/execution_timeline.html"
  }
report {
  enabled = true
  file = "${params.results}/execution_report.html"
  }